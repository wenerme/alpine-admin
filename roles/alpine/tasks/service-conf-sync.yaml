- name: add rsync
  become: true
  apk:
    name: rsync

- name: detect local conf path
  include_tasks: service-conf-path.yaml

- name: sync {{service_name}} config dir
  become: true
  synchronize:
    src: "{{service_conf_path}}/"
    dest: "{{service_conf_dest_path}}/"
    recursive: true
    # TODO may contain template - the change caused by delete may not accurate
    delete: "{{service_conf_delete|default(false)}}"
    rsync_opts:
      # skip j2 template
      - "--exclude=*.j2"
  when: "service_conf_path is directory"
  notify: "{{service_name}}-{{service_notify_type|default('reload')}}"

# NOTE no recursive
- name: template {{service_name}} config dir
  become: true
  template:
    src: "{{item}}"
    dest: "{{service_conf_dest_path}}/{{item|basename|regex_replace('[.]j2$','') }}"
  when: "service_conf_path is directory"
  with_fileglob:
    - "{{service_conf_path}}/*.j2"
  notify: "{{service_name}}-{{service_notify_type|default('reload')}}"

- name: sync {{service_name}} config file
  become: true
  synchronize:
    src: "{{service_conf_path}}"
    dest: "{{service_conf_dest_path}}"
  when: "service_conf_path is file and service_conf_path is not regex('[.]j2$')"
  notify: "{{service_name}}-{{service_notify_type|default('reload')}}"

- name: template {{service_name}} config file
  become: true
  template:
    src: "{{service_conf_path}}"
    # expect a file path not directory - otherwise will use .j2 extension
    dest: "{{service_conf_dest_path}}"
  when: "service_conf_path is file and service_conf_path is regex('[.]j2$')"
  notify: "{{service_name}}-{{service_notify_type|default('reload')}}"
